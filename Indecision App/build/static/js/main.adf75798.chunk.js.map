{"version":3,"sources":["components/AddOption.js","components/Action.js","components/Header.js","components/Option.js","components/Options.js","components/OptionModal.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","elements","value","trim","_this","props","setState","react_default","a","createElement","this","className","onSubmit","htmlFor","id","autoFocus","type","name","placeholder","aria-label","aria-required","React","Component","Action","onClick","handlePick","disabled","hasOptions","Header","title","subtitle","defaultProps","Option","count","optionText","handleDeleteOption","Options","handleDeleteOptions","options","length","map","index","components_Option","key","OptionModal","lib_default","show","selectedOption","text","onConfirm","handleClearSelectedOption","Footer","App","optionToRemove","prevState","filter","randomNum","Math","floor","random","indexOf","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","console","log","components_Header","components_Action","components_Options","AddOption_AddOption","components_OptionModal","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.adf75798.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class AddOption extends React.Component {\n  state = {\n    error: undefined\n  };\n  handleAddOption = e => {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = \"\";\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.state.error && (\n          <p className=\"add-option-error\">{this.state.error}</p>\n        )}\n        <form className=\"add-option\" onSubmit={this.handleAddOption}>\n          <label htmlFor=\"option\">\n            <input\n              id=\"option\"\n              autoFocus\n              className=\"add-option__input\"\n              type=\"text\"\n              name=\"option\"\n              placeholder=\"Learn React\"\n              aria-label=\"Option Input\"\n              aria-required=\"true\"\n            />\n          </label>\n          <button className=\"button\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Action = (props) => (\n  <div>\n    <button\n      className=\"big-button\"\n      onClick={props.handlePick}\n      disabled={!props.hasOptions}\n    >\n      What should I do?\n      </button>\n  </div>\n);\n\nexport default Action;\n","import React from 'react';\n\nconst Header = (props) => (\n  <div className=\"header\">\n    <div className=\"container\">\n      <h1 className=\"header__title\">{props.title}</h1>\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\n    </div>\n  </div>\n);\n\nHeader.defaultProps = {\n  title: 'Indecision'\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Option = (props) => (\n  <div className=\"option\">\n    <p className=\"option__text\">{props.count}. {props.optionText}</p>\n    <button\n      className=\"button button--link\"\n      onClick={(e) => {\n        props.handleDeleteOption(props.optionText);\n      }}\n    >\n      remove\n      </button>\n  </div>\n);\n\nexport default Option;\n","import React from \"react\";\nimport Option from \"./Option\";\n\nconst Options = props => (\n  <div>\n    <div className=\"widget-header\">\n      <h3 className=\"widget-header__title\">Your Options</h3>\n      <button\n        className=\"button button--link\"\n        onClick={props.handleDeleteOptions}\n        disabled={props.options.length === 0}\n      >\n        Remove All\n      </button>\n    </div>\n\n    {props.options.length === 0 && (\n      <p className=\"widget__message\">Please add an option to get started!</p>\n    )}\n    {props.options.map((option, index) => (\n      <Option\n        key={option}\n        optionText={option}\n        count={index + 1}\n        handleDeleteOption={props.handleDeleteOption}\n      />\n    ))}\n  </div>\n);\n\nexport default Options;\n","import React from \"react\";\nimport SweetAlert from \"sweetalert2-react\";\nimport \"../styles/components/_modal.scss\";\n\nconst OptionModal = props => (\n  <SweetAlert\n    show={!!props.selectedOption}\n    title=\"\"\n    text={props.selectedOption}\n    onConfirm={props.handleClearSelectedOption}\n  />\n);\n\nexport default OptionModal;\n","import React from \"react\";\n\n\nconst Footer = () => (\n  <footer className=\"App-footer\">\n    <p>Built with React.</p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport AddOption from \"./AddOption\";\nimport Action from \"./Action\";\nimport Header from \"./Header\";\nimport Options from \"./Options\";\nimport OptionModal from \"./OptionModal\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n  state = {\n    options: [],\n    selectedOption: undefined\n  };\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  };\n  handleClearSelectedOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  };\n  handleDeleteOption = optionToRemove => {\n    this.setState(prevState => ({\n      options: prevState.options.filter(option => optionToRemove !== option)\n    }));\n  };\n  handlePick = () => {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    this.setState(() => ({\n      selectedOption: option\n    }));\n  };\n  handleAddOption = option => {\n    if (!option) {\n      return \"Enter valid value to add item\";\n    } else if (this.state.options.indexOf(option) > -1) {\n      return \"This option already exists\";\n    }\n\n    this.setState(prevState => ({\n      options: prevState.options.concat(option)\n    }));\n  };\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem(\"options\");\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", json);\n    }\n  }\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n  render() {\n    const subtitle = \"Put your life in the hands of a computer\";\n\n    return (\n      <div className=\"App\">\n        <Header subtitle={subtitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={this.state.options.length > 0}\n            handlePick={this.handlePick}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption handleAddOption={this.handleAddOption} />\n          </div>\n        </div>\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          handleClearSelectedOption={this.handleClearSelectedOption}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport \"./styles/styles.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}